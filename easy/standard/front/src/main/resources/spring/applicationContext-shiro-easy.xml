<?xml version="1.0" encoding="utf-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
                            http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
                            http://www.springframework.org/schema/context   
                        http://www.springframework.org/schema/context/spring-context-4.1.xsd
                            http://www.springframework.org/schema/cache 
                            http://www.springframework.org/schema/cache/spring-cache-4.1.xsd
                            http://www.springframework.org/schema/tx    
                       	   http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
	<context:component-scan base-package="com.dimeng">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<!-- shrio的filter，在这里可以配置，登录相关的页面，及对那些URL进行权限拦截权限认证 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- shiro的核心安全接口 -->
		<property name="securityManager" ref="securityManager" />
		<!-- 要求登录时的链接 -->
		<property name="loginUrl" value="/" />
		<!-- 登录成功后要跳转的连接 -->
		<property name="successUrl" value="" />
		<!-- 未授权时要跳转的连接 -->
		<property name="unauthorizedUrl" value="/" />
		<property name="filters">
			<map>
				<entry key="authc">
					<bean class="com.dimeng.front.shiro.FrontAuthenticationFilter"></bean>
				</entry>
			</map>
		</property>
		<!-- shiro连接约束配置 -->
		<property name="filterChainDefinitions">
			<value>
				<!-- Base -->
				/cust/** = anon
				/js/** = anon
				/css/** = anon
				/images/** = anon
				/home/** = anon
				/frontHome/** = anon 
				
				
				/captcha = anon
				/common/**= anon
				<!-- 轻松筹 -->
				/easy/css/** = anon
				/easy/flash/** = anon
				/easy/images/** = anon
				/easy/js/** = anon
				/project/** = anon
				/hospital/** = anon
				<!-- 第三方回调地址 -->
				/thirdCallback/callback.do = anon
				/**/* = authc
			</value>
		</property>
	</bean>
	<!-- SessionDAO用shiro提供的默认实现 -->
	<bean id="sessionDAO"
		class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		<property name="cacheManager" ref="shiroEhcacheManager" />
		<property name="activeSessionsCacheName" value="front_shiro-activeSessionCache" />
	</bean>
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="sessionIdCookieEnabled" value="true" />
		<property name="sessionIdCookie" ref="sessionIdCookie" />
		<property name="deleteInvalidSessions" value="true" />
		<property name="sessionDAO" ref="sessionDAO" />
		<property name="sessionValidationSchedulerEnabled" value="true" />
		<property name="globalSessionTimeout" value="1800000" />
		<property name="sessionValidationInterval" value="2400000" /><!--Session 
			超时检测时间 单位：毫秒 -->
		<!-- <property name="sessionListeners"> <list> <ref bean="simpleShiroSessionListener"/> 
			</list> </property> -->
	</bean>

	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="sid" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="1800000" />
	</bean>
	<!-- shiro对ehcache的缓存管理直接使用spring的缓存工厂 -->
	<bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManager" ref="ehCacheManagerFactory" />
	</bean>
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="myShiroRealm" />
		<property name="sessionManager" ref="sessionManager" />
		<property name="cacheManager" ref="shiroEhcacheManager" />
	</bean>
	<!--自定义Realm 继承自AuthorizingRealm -->
	<bean id="myShiroRealm" class="com.dimeng.front.shiro.MyShiroRealm"></bean>
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
</beans>
