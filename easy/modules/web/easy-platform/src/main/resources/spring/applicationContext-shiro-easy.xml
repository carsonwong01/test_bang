<?xml version="1.0" encoding="utf-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
                            http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
                            http://www.springframework.org/schema/cache 
                            http://www.springframework.org/schema/cache/spring-cache-4.1.xsd">

	<!-- shrio的filter，在这里可以配置，登陆相关的页面，及对那些URL进行权限拦截权限认证 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- shiro的核心安全接口 -->
		<property name="securityManager" ref="securityManager" />
		<!-- 要求登录时的链接 -->
		<property name="loginUrl" value="/" />
		<!-- 登陆成功后要跳转的连接 -->
		<property name="successUrl" value="/main.do" />
		<!-- 未授权时要跳转的连接 -->
		<property name="unauthorizedUrl" value="/" />
		<property name="filters">
			<map>
				<entry key="authc">
					<bean class="com.dimeng.platform.shiro.PlatformAuthenticationFilter"></bean>
				</entry>
			</map>
		</property>
		<!-- shiro连接约束配置 -->
		<property name="filterChainDefinitions">
			<value>
				 
				/system/basicInfoSet/v/projectBaseTypeInfo = anon
				/bankCard/bindBankCardNotify.do=anon
				/bankCard/bindBankCardResp.do=anon
				<!-- 查询所属行业 不要把这个注释掉，app需要使用 -->
			    /system/basicInfoSet/*/projectBaseConfigName=anon
			    <!-- app查询启动页设置放开 -->
			    /system/appIndexSet/*/getAppIndexSet=anon
			    /system/versionManage/*/appVersionFirst=anon
				<!-- 后台登录 -->
				/home/consoleLogin/*/consoleLoginCheck = anon
				/site/helpCenter/*/helpCenterList = anon
				/site/helpCenter/*/aboutUsTitle = anon
				/site/helpCenter/*/aboutUsTitleEnable = anon
				/product/common/*/industryList = anon
				/common/*/cpFronTotalMessage = anon
				
		
				/wechat/callback/chargeNotify.do=anon
				/wechat/callback/chargeResp.do=anon
			
				<!-- 平台公告和新闻资讯 -->
		        /site/media/*/reportList= anon
		        /site/media/*/reportDetail= anon 
				/home/frontLogin/*/*=anon
				/home/frontRegister/*/frontUserInfo=anon
				/home/frontRegister/*/userNameUnique=anon
				/site/totalMessage/*/fronTotalMessage=anon
                /druid/** = anon
                
                /bus/project/v/muchProCity = anon
                /user/investorManage/v/muchInvestorCity = anon
                 
                /bus/equityProject/*/projectList=anon
                /bus/equityProject/*/projectDetail=anon
				/bus/equityProject/*/projectDetails=anon
                /bus/equityProject/*/commentList = anon
                /bus/equityProject/*/initiatorAndLeaderIfn= anon
                /user/investorManage/*/investorList = anon
                /user/investorManage/*/investorDetail = anon
                /system/basicInfoSet/*/projectBaseConfigName=anon
                /site/siteSet/*/clauseList=anon
                /operation/basicInfoSet/*/findImgModel=anon
                /site/textInstruct/*/findTextInstructList=anon
                /system/common/*/provincialLeague=anon
                /home/appData/*/tSiteInfoForApp=anon
                <!-- 发送验证码 -->
                /common/message/*/* = anon
                /home/consoleLogin/*/checkAmindUserIsExists=anon
				/common/imageCut/*/findSlidePic = anon
                /common/imageCut/*/checkUserIsShowPic = anon
                <!-- 前台首页 -->
                /home/frontInfo/*/* = anon
                /project/query/v/commentList = anon
                /project/query/v/dynamic = anon
                /project/query/v/projectDetails = anon
                /operation/basicInfoSet/v/findLabels = anon
                /system/cache/v/findCache = anon
				/hospital/v/findAllHospital = anon
				/hospital/v/hospitalDetails = anon
				/project/query/v/projectList = anon
				/hospital/v/findHospitalProject = anon
				/hospital/v/findHosProjectSum = anon
				/frontHome/v/recomNewsList = anon
				/home/frontInfo/v/frontAllProject = anon
				/home/frontInfo/v/frontAllProList = anon
				/home/frontInfo/v/findSiteInvestment = anon
				/home/frontInfo/v/findHomeHosList = anon
				/home/frontInfo/v/findPartnerList = anon
				/user/userManage/v/findInitiateProList = anon
				/hospital/v/linkMethod = anon
				/user/userManage/v/updateHosInfo = anon
				/user/userManage/v/insertHosUser = anon
				/user/userManage/v/findHosUserInfo = anon
				/user/userManage/v/updateHosRecStatus = anon
				/user/userManage/v/findProvince = anon
				/user/userManage/v/findCity = anon
				/foundation/v/foundationList = anon
				/foundation/v/foundationDetails = anon
				/project/operate/v/selectFoundation = anon



                <!-- 第三方授權 -->
                 /thirdAuthorize/*/* = anon
                 <!-- 分享 -->
                 /share/*/** = anon
                 
				 /MP_verify_9gG5rWsB0zCedtxb.txt = anon
				 
				/**/* = authc
			</value>
		</property>
	</bean>
	<!-- SessionDAO用shiro提供的默认实现 -->
	<bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO"> 
	       <property name="cacheManager" ref="shiroEhcacheManager" />
	</bean>
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="sessionDAO" ref="sessionDAO" />
	</bean>
	<!-- shiro对ehcache的缓存管理直接使用spring的缓存工厂 -->
	<bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManager" ref="ehCacheManagerFactory" />
	</bean>
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="myShiroRealm" />
		<property name="sessionManager" ref="sessionManager" />
		<property name="cacheManager" ref="shiroEhcacheManager" />
	</bean>
	<!--自定义Realm 继承自AuthorizingRealm -->
	<bean id="myShiroRealm" class="com.dimeng.platform.shiro.MyShiroRealm"></bean>
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	<!-- 开启Shiro注解的Spring配置方式的beans。在lifecycleBeanPostProcessor之后运行 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor" />
</beans>
